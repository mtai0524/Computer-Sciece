@page "/chat-room"

@using CodeFirst.Data
@using CodeFirst.Hubs
@using CodeFirst.Models
@using CodeFirst.Service
@using CodeFirst.Services
@using CodeFirst.ViewModels
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.SignalR
@using Microsoft.AspNetCore.SignalR.Client
@inject ChatService chatService
@inject UserManager<ApplicationUser> userManager
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@inject IHubContext<ChatHub> hubContext
@inject OnlineUserService OnlineUserService
<main id="mainContent" class="content">
    <div class="container p-0 " style="box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;">
        <div class="card chat-container">
            <div class="row g-0">
                <div class="col-12 col-lg-5 col-xl-3 list-group-container" style="border-right:1px solid #EEEEEE">

                    <div style="border-right: 1px solid #EEEEEE;" class="px-4 d-none d-md-block">
                        <div class="d-flex align-items-center">
                            <div class="flex-grow-1">
                                <input type="text" class="form-control my-3" placeholder="Search...">
                            </div>
                        </div>
                    </div>
                    <div class="list-user-status">
                        <div class="list-group-online">
                       @*      @foreach (var item in onlineUsers)
                            {
                                <a href="#" class="list-group-item list-group-item-action border-0">
                                    <div class="current-user">
                                        <img src="@item.Avatar ?? 'https://as2.ftcdn.net/v2/jpg/04/10/43/77/1000_F_410437733_hdq4Q3QOH9uwh0mcqAhRFzOKfrCR24Ta.jpg'" class="rounded-circle mr-1 img-list-user"  width="40" height="40" title="@item.Email">
                                        <div class="flex-grow-1 ml-3">
                                            <div class="username">@($"{item.FirstName} {item.LastName}")</div>
                                            <div class="text-status">
                                                <span class="small online-status chat-online">Online</span>
                                            </div>
                                        </div>
                                        <span class="status online"></span>
                                    </div>
                                </a>
                            } *@
                        </div>
                        <div class="list-group-offline">
                        </div>
                    </div>

                    <hr class="d-block d-lg-none mt-1 mb-0">
                </div>
                <div class="col-12 col-lg-7 col-xl-9">
                    <div class="py-2 px-4 border-bottom d-none d-lg-block" style="background-color:#484C7F">
                        <div class="d-flex align-items-center py-1">
                            <div class="position-relative ">
                                <img src="https://res.cloudinary.com/dl3hvap4a/image/upload/v1698337439/lmox3dywhsrbnsiv6vhq.jpg" class="rounded-circle mr-1" alt="Sharon Lessman" width="40" height="40">
                            </div>
                            <div class="flex-grow-1 pl-3">
                                <strong style="color: #ffffff;">anh long my den</strong>
                                <div class="text-muted small"><em>đang chat...</em></div>
                            </div>
                            <div class="more-options fa-lg">
                                <button style="margin-right:5px" class="btn-phone" title="Start a voice call">
                                    <i class="fa-solid fa-phone" style="color: #ffffff;"></i>
                                </button>
                                <button style="margin-right:5px" class="btn-video ml-3" title="Start a video call">
                                    <i class="fa-solid fa-video" style="color: #ffffff;"></i>
                                </button>
                                <button style="margin-right:5px" class="btn-information ml-3">
                                    <i class="fa-solid fa-info" style="color: #ffffff;"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="position-relative">
                        <div class="chat-messages-list p-4" id="chatMessagesList" style="overflow: auto !important;">
                            @foreach (var message in chatMessages)
                            {
                                <div class="chat-message-right pb-4">
                                    <div>
                                        <img src="@message.Avatar" class="rounded-circle mr-1" alt="Avatar" width="40" height="40">
                                    </div>
                                    <div class="flex-shrink-1 box-messages bg-light rounded py-2 px-3 ml-3" style="max-width:90%">
                                        <div class="font-weight-bold mb-1" style="color:#8CB2B2;">@message.Username</div>
                                        <span>@message.Message</span>
                                        <div class="message-details d-flex justify-content-between">
                                            <div class="text-muted small text-nowrap mt-2 date-time">@message.NotificationDateTime</div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="flex-grow-0 py-3 px-4 border-top">

                        <EditForm Model="@chatMessageModel" OnSubmit="@SendMessage">
                            <div class="input-group">
                                <InputText @bind-Value="chatMessageModel.Message" style="padding:30px;box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;" class="form-control" placeholder="Type your message" />
                                <button style="margin-left:5px;box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;" type="submit" class="btn btn-primary">
                                    <i class="fa-solid fa-paper-plane"></i>
                                </button>
                            </div>
                        </EditForm>
                    </div>

                </div>
            </div>
        </div>
    </div>
</main>

@code {

    private ChatViewModel chatMessageModel = new ChatViewModel();
    private HubConnection hubConnection;
    private bool isDataLoaded = false;
    private List<Models.Entities.Chat> chatMessages = new List<Models.Entities.Chat>();
    private List<UserInformation> onlineUsers = new List<UserInformation>();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !isDataLoaded)
        {
            await JS.InvokeVoidAsync("scrollToBottom");

            await LoadChatData();
            isDataLoaded = true;
        }
    }
    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/chatHub"))
            .Build();

        hubConnection.On<Models.Entities.Chat>("ReceiveMessage", async (newMessage) =>
        {
            await UpdateChatMessages(newMessage);
        });


        await hubConnection.StartAsync();
    }



    public async Task UpdateChatMessages(Models.Entities.Chat newMessage)
    {
        chatMessages.Add(newMessage);

        StateHasChanged();
    }

    private async Task LoadChatData()
    {
        var result = await chatService.GetMessagesAsync();
        chatMessages = result.ToList();
        onlineUsers = await OnlineUserService.GetOnlineUsersAsync();
        StateHasChanged();
    }

    private async Task SendMessage()
    {
        await chatService.SendMessage(chatMessageModel);
        chatMessageModel.Message = string.Empty;
        await JS.InvokeVoidAsync("scrollToBottom");

    }

}

