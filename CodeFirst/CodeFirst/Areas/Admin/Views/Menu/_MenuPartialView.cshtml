@using CodeFirst.Models.Entities;
@model IEnumerable<MenuEntity>
<!-- Modal dạng khi lọc dữ liệu hoặc tìm kiếm -->
<div class="modal fade" id="editMenuModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered custom-modal" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Chỉnh sửa menu</h5>
                <button type="button" class="close" aria-label="Close" id="closeModalButton" style="border-color:transparent;background-color:transparent;outline:none">
                    <span aria-hidden="true"><i class="fa-solid fa-circle-xmark fa-2xl" style="color: #e62719;"></i></span>
                </button>

            </div>
            <div class="modal-body" style="height:40rem">
                <!-- Dữ liệu được nạp vào -->
            </div>
        </div>
    </div>
</div>
@* modal xóa *@
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Xác nhận xóa</h5>
                <button type="button" class="close" aria-label="Close" id="closeModalButtonDelete" style="border-color:transparent;background-color:transparent;outline:none">
                    <span aria-hidden="true"><i class="fa-solid fa-circle-xmark fa-2xl" style="color: #e62719;"></i></span>
                </button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa mục này không?
            </div>
            <div class="modal-footer">
                <a class="btn btn-outline-info" id="cancelButton">Hủy</a>
                <a class="btn btn-outline-danger" id="confirmDeleteButton">Xóa</a>
            </div>
        </div>
    </div>
</div>

@* Modal tạo món *@
<div class="modal fade" id="createMenuModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalLabel">Thêm món ăn</h5>
                <button type="button" class="close" aria-label="Close" id="closeModalButtonCreate" style="border-color:transparent;background-color:transparent;outline:none">
                    <span aria-hidden="true"><i class="fa-solid fa-circle-xmark fa-2xl" style="color: #e62719;"></i></span>
                </button>
            </div>
            <div class="modal-body" id="createMenuModalBody">
                <!-- Dữ liệu chi tiết món ăn sẽ được hiển thị ở đây -->
            </div>
        </div>
    </div>
</div>

@* modal xem chi tiết *@
<div class="modal fade" id="detailMenuModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Chi tiết món ăn</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="menuDetailContent">
                <!-- Dữ liệu chi tiết món ăn sẽ được hiển thị ở đây -->
            </div>
        </div>
    </div>
</div>
<table class="table" id="menuTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
          
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MenuCategory)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td width="10%">
                    <img src="@item.Image" class="rounded float-start" style="width:100%; height:6rem">
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
               
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MenuCategory.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <a class="btn btn-outline-info edit-menu-button" data-menu-id="@item.MenuId">Sửa</a> |
                    <a class="btn btn-outline-success show-detail-button" data-menu-id="@item.MenuId">Chi tiết</a> |
                    <a class="btn btn-outline-danger delete-button" data-menu-id="@item.MenuId">Xóa</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>

    // Lấy tham chiếu đến nút close
    var closeModalCreateButton = document.getElementById('closeModalButtonCreate');

    // Lắng nghe sự kiện click trên nút close và đóng modal
    closeModalCreateButton.addEventListener('click', function () {
        var modal = document.getElementById('createMenuModal');
        if (modal) {
            $(modal).modal('hide'); // Sử dụng Bootstrap JavaScript để đóng modal
        }
    });

    // Lấy tham chiếu đến nút close
    var closeModalButton = document.getElementById('closeModalButton');

    // Lắng nghe sự kiện click trên nút close và đóng modal
    closeModalButton.addEventListener('click', function () {
        var modal = document.getElementById('editMenuModal');
        if (modal) {
            $(modal).modal('hide'); // Sử dụng Bootstrap JavaScript để đóng modal
        }
    });

    // Lấy tham chiếu đến nút close
    var closeModalButtonDelete = document.getElementById('closeModalButtonDelete');

    // Lắng nghe sự kiện click trên nút close và đóng modal
    closeModalButtonDelete.addEventListener('click', function () {
        var modal = document.getElementById('confirmDeleteModal');
        if (modal) {
            $(modal).modal('hide'); // Sử dụng Bootstrap JavaScript để đóng modal
        }
    });

    // Lấy tham chiếu đến nút "Hủy"
    var cancelButton = document.getElementById('cancelButton');

    // Lắng nghe sự kiện click trên nút "Hủy" và đóng modal
    cancelButton.addEventListener('click', function () {
        var modal = document.getElementById('confirmDeleteModal');
        if (modal) {
            $(modal).modal('hide');
        }
    });

    $(document).ready(function () {

        // Lắng nghe sự kiện khi nút "Chi tiết" được nhấp
        $('.show-detail-button').on('click', function () {
            var menuId = $(this).data('menu-id');

            // Gửi yêu cầu AJAX để lấy dữ liệu chi tiết món ăn
            $.ajax({
                url: `/Admin/Menu/GetMenuDetails/${menuId}`, // Điều hướng đến action để lấy dữ liệu chi tiết món ăn
                type: 'GET',
                success: function (data) {
                    // Hiển thị dữ liệu chi tiết món ăn trong modal
                    $('#menuDetailContent').html(data);

                    // Hiển thị modal
                    $('#detailMenuModal').modal('show');
                },
                error: function (error) {
                    console.error(error);
                }
            });
        });

        // Xác định menuId của mục cần xóa
        let menuIdToDelete;

        // Xác định khi nào modal nên hiển thị
        $('.delete-button').on('click', function () {
            menuIdToDelete = $(this).data('menu-id');
            $('#confirmDeleteModal').modal('show');
        });

        // Xác định hành động khi nút "Xóa" trên modal được nhấn
        $('#confirmDeleteButton').on('click', function () {
            $('#confirmDeleteModal').modal('hide'); // Ẩn modal

            // Thực hiện yêu cầu AJAX để xóa
            $.ajax({
                url: `/Admin/Menu/Delete/${menuIdToDelete}`,
                type: 'POST', // Chỉ định phương thức POST
                success: function (response) {
                    if (response.success) {
                        // Xử lý khi xóa thành công
                        toastr.options.progressBar = true;
                        toastr.success('Xóa thành công!', 'Thành công');

                        // Lấy danh sách món ăn hiện tại từ server bằng AJAX
                        $.get('/Admin/Menu/GetMenuList', function (data) {
                            $('#menuTable').html(data); // Cập nhật danh sách món ăn
                        });
                    }
                },
                error: function (error) {
                    // Xử lý khi có lỗi
                    console.error('Lỗi:', error);
                }
            });
        });


        // Lắng nghe sự kiện khi nút chỉnh sửa được nhấn
        $('.edit-menu-button').click(function () {
            var menuId = $(this).data('menu-id');

            // Gửi yêu cầu AJAX để lấy dữ liệu menu cần chỉnh sửa
            $.ajax({
                url: '/Admin/Menu/GetMenuForEdit/' + menuId, // Đường dẫn đến action để lấy dữ liệu menu
                type: 'GET',
                success: function (data) {
                    // Điền dữ liệu vào modal
                    $('#editMenuModal .modal-body').html(data);

                    // Hiển thị modal
                    $('#editMenuModal').modal('show');
                },
                error: function (error) {
                    console.error(error);
                }
            });
        });
    });
</script>
