@model IEnumerable<CodeFirst.Models.Entities.MenuEntity>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}


<nav aria-label="breadcrumb" >
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-area="Identity" asp-page="/Account/Manage/Index">Trang chủ</a></li>
        <li class="breadcrumb-item"><a class="my-active-link"  asp-area="Admin" asp-action="Index" asp-controller="Menu">Quản lý thực đơn</a></li>
    </ol>
</nav>

<h1>Quản lý thực đơn</h1>
<hr />

@* <p>
    <a asp-action="Create" class="btn btn-outline-primary">Thêm món mới</a>
</p> *@
<a class="btn btn-outline-primary" id="addMenuButton">Thêm món mới</a>

<form asp-action="Filter" method="post" id="searchForm">
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <h8 for="categoryId">Chọn thể loại:</h8>
                <select class="form-control" id="categoryId" name="categoryId">
                    <option value="">Tất cả</option>
                    @foreach (var category in ViewBag.Categories)
                    {
                        <option value="@category.CategoryId">@category.Name</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <h8 for="searchString">Tìm kiếm:</h8>
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text">
                            <i class="icofont-search-2 fs-4"></i>
                        </span>
                    </div>
                    <input type="text" class="form-control" id="searchString" name="searchString" placeholder="tìm kiếm">
                </div>
            </div>
        </div>

@*         <div class="col-md-4">
            <div class="form-group">
                <button type="submit" class="btn btn-primary" style="margin-top:1.3rem">Tìm kiếm</button>
            </div>
        </div> *@
    </div>
</form>
<!-- Modal -->
<div class="modal fade" id="editMenuModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered custom-modal" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Quản lý thực đơn</h5>
                <button type="button" class="close" aria-label="Close" id="closeModalButton" style="border-color:transparent;background-color:transparent;outline:none">
                    <span aria-hidden="true"><i class="fa-solid fa-circle-xmark fa-2xl" style="color: #e62719;"></i></span>
                </button>

            </div>
            <div class="modal-body" style="height:40rem">
                <!-- Dữ liệu được nạp vào -->
            </div>
        </div>
    </div>
</div>

@* modal xóa *@
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Xác nhận xóa</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa mục này không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Xóa</button>
            </div>
        </div>
    </div>
</div>

<table class="table" id="menuTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MenuCategory)
            </th>
       
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td width="10%">
                    <img src="@item.Image" class="rounded float-start" style="width:100%; height:6rem">
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MenuCategory.Name)
            </td>
            <td>
                <a class="btn btn-outline-info edit-menu-button" data-menu-id="@item.MenuId">Sửa</a> |
                <a class="btn btn-outline-success" asp-action="Details" asp-route-id="@item.MenuId">Chi tiết</a> |
                <button class="btn btn-danger delete-button" data-menu-id="@item.MenuId">Xóa</button>
            </td>
        </tr>
}
    </tbody>
</table>
@section Scripts{
    <script>



        // Lấy tham chiếu đến nút close
        var closeModalButton = document.getElementById('closeModalButton');

        // Lắng nghe sự kiện click trên nút close và đóng modal
        closeModalButton.addEventListener('click', function () {
            var modal = document.getElementById('editMenuModal');
            if (modal) {
                $(modal).modal('hide'); // Sử dụng Bootstrap JavaScript để đóng modal
            }
        });

        $(document).ready(function () {


            // Xác định menuId của mục cần xóa
            let menuIdToDelete;

            // Xác định khi nào modal nên hiển thị
            $('.delete-button').on('click', function () {
                menuIdToDelete = $(this).data('menu-id');
                $('#confirmDeleteModal').modal('show');
            });

            // Xác định hành động khi nút "Xóa" trên modal được nhấn
            $('#confirmDeleteButton').on('click', function () {
                $('#confirmDeleteModal').modal('hide'); // Ẩn modal

                // Thực hiện yêu cầu AJAX để xóa
                $.ajax({
                    url: `/Admin/Menu/Delete/${menuIdToDelete}`,
                    type: 'POST', // Chỉ định phương thức POST
                    success: function (response) {
                        if (response.success) {
                            // Xử lý khi xóa thành công
                            toastr.options.progressBar = true;
                            toastr.success('Xóa thành công!', 'Thành công');

                            // Lấy danh sách món ăn hiện tại từ server bằng AJAX
                            $.get('/Admin/Menu/GetMenuList', function (data) {
                                $('#menuTable').html(data); // Cập nhật danh sách món ăn
                            });
                        }
                    },
                    error: function (error) {
                        // Xử lý khi có lỗi
                        console.error('Lỗi:', error);
                    }
                });
            });



            $('#addMenuButton').click(function () {
                // Gửi yêu cầu AJAX để lấy dữ liệu form thêm menu
                $.ajax({
                    url: '/Admin/Menu/GetMenuForCreate', // Đường dẫn đến action để lấy form thêm menu
                    type: 'GET',
                    success: function (data) {
                        // Điền dữ liệu vào modal
                        $('#editMenuModal .modal-body').html(data);

                        // Hiển thị modal
                        $('#editMenuModal').modal('show');
                    },
                    error: function (error) {
                        console.error(error);
                    }
                });
            });
            // Lắng nghe sự kiện khi nút chỉnh sửa được nhấn
            $('.edit-menu-button').click(function () {
                var menuId = $(this).data('menu-id');

                // Gửi yêu cầu AJAX để lấy dữ liệu menu cần chỉnh sửa
                $.ajax({
                    url: '/Admin/Menu/GetMenuForEdit/' + menuId, // Đường dẫn đến action để lấy dữ liệu menu
                    type: 'GET',
                    success: function (data) {
                        // Điền dữ liệu vào modal
                        $('#editMenuModal .modal-body').html(data);

                        // Hiển thị modal
                        $('#editMenuModal').modal('show');
                    },
                    error: function (error) {
                        console.error(error);
                    }
                });
            });

            // Lắng nghe sự kiện khi giá trị của categoryId thay đổi
            $('#categoryId').change(function () {
                // Gọi hàm để xử lý AJAX cho lọc theo categoryId
                filterMenuItems();
            });

            // Lắng nghe sự kiện khi người dùng gõ ký tự vào ô tìm kiếm
            $('#searchString').on('keyup', function () {
                // Gọi hàm để xử lý AJAX cho tìm kiếm
                filterMenuItems();
            });

            // Lắng nghe sự kiện khi nút tìm kiếm được nhấn
            $('#searchButton').on('click', function () {
                // Gọi hàm để xử lý AJAX cho tìm kiếm
                filterMenuItems();
            });

            // Lắng nghe sự kiện khi form được submit
            $('#searchForm').submit(function (e) {
                e.preventDefault(); // Ngăn chặn submit form mặc định

                // Gọi hàm để xử lý AJAX cho tìm kiếm
                filterMenuItems();
            });

            function filterMenuItems() {
                // Lấy giá trị categoryId đã chọn
                var selectedCategoryId = $('#categoryId').val();
                // Lấy giá trị tìm kiếm
                var searchString = $('#searchString').val();

                // Gửi yêu cầu AJAX đến action Filter của controller
                $.ajax({
                    url: '@Url.Action("Filter", "Menu")', // Điều hướng đến action Filter của MenuController
                    type: 'GET',
                    data: { categoryId: selectedCategoryId, searchString: searchString },
                    success: function (data) {
                        // Cập nhật chỉ phần của trang mà bạn muốn thay đổi (ví dụ: bảng menu)
                        $('#menuTable').html(data);
                    },
                    error: function (error) {
                        console.error(error);
                    }
                });
            }
        });

    </script>
}
