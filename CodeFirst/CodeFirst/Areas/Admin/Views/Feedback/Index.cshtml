@model IEnumerable<CodeFirst.Models.Entities.Feedback>

@{
    ViewData["Title"] = "Danh sách phản hồi người dùng";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css">

@{
    Dictionary<string, (double totalRating, int numberOfRatings)> branchRatings = new Dictionary<string, (double, int)>();

    foreach (var item in Model)
    {
        var branchName = item.Branch.Name;
        var rating = item.Rating ?? 0.0;

        if (!branchRatings.ContainsKey(branchName))
        {
            branchRatings[branchName] = (rating, 1);
        }
        else
        {
            var (totalRating, numberOfRatings) = branchRatings[branchName];
            branchRatings[branchName] = (totalRating + rating, numberOfRatings + 1);
        }
    }
}

<h1>Danh sách phản hồi</h1>
@* <a asp-action="Create">Create New</a> *@

<div class="feedback-container">
    <div class="sorting-options">
        <div class="branch-filter">
            <label for="branchFilter">Lọc theo chi nhánh: </label>
            <select id="branchFilter" onchange="filterFeedbacks()">
                <option value="all">Tất cả</option>
                @foreach (var branch in ViewBag.Branches)
                {
                    <option value="@branch.BranchId">@branch.Name</option>
                }
            </select>
        </div>
        <div class="sorting-options-left">
            <label>Sắp xếp theo: </label>
            <select id="sortOptions">
                <option value="dateAsc">Ngày tăng dần</option>
                <option value="dateDesc">Ngày giảm dần</option>
                <option value="ratingAsc">Rating tăng dần</option>
                <option value="ratingDesc">Rating giảm dần</option>
            </select>
        </div>
        <div class="sorting-options-right">
            <div class="search-box">
                <label style="margin-right:10px" for="searchKeyword">Tìm kiếm: </label>
                <input class="custom-input" style="margin-right:10px" type="text" id="searchKeyword" placeholder="Nhập từ khóa...">
                <button id="searchButton" class="btn btn-primary">Tìm</button>
            </div>
        </div>
    </div>
    <div class="content-container">

    <div class="feedback-list">
        @foreach (var item in Model)
        {
            <div class="feedback-item">
                <div class="feedback-email">
                    <img class="avatar" src="@item.Id?.Avatar" alt="Avatar" />
                    <span style="color:#999" >@item.Id?.Email</span>
                    <span class="feedback-date">@item.FeedbackDate</span>
                </div>
                <div style="margin-top:5px" class="feedback-content">
                    @item.Content</div>
                <div class="feedback-rating">
                    <div class="star-rating">
                        @for (int i = 0; i < Math.Floor((double)item.Rating); i++)
                        {
                            <i class="fas fa-star"></i>
                        }
                        @if ((double)item.Rating % 1 > 0)
                        {
                            <i class="fas fa-star-half-alt"></i>
                        }
                        @for (int i = 0; i < 5 - Math.Ceiling((double)item.Rating); i++)
                        {
                            <i class="far fa-star"></i>
                        }
                    </div>
                    <div class="branch-name">
                        @item.Branch.Name
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="branch-averages">
        <ul>
            @foreach (var branchRating in branchRatings)
            {
                var (branchName, (totalRating, numberOfRatings)) = branchRating;
                var averageRating = numberOfRatings > 0 ? totalRating / numberOfRatings : 0.0;

                <li>
                    @branchName: 
                    <span class="star-rating">
                        @for (int i = 0; i < Math.Floor(averageRating); i++)
                        {
                            <i class="fas fa-star"></i>
                        }
                        @if (averageRating % 1 > 0)
                        {
                            <i class="fas fa-star-half-alt"></i>
                        }
                        @for (int i = 0; i < 5 - Math.Ceiling(averageRating); i++)
                        {
                            <i class="far fa-star"></i>
                        }
                    </span>
                </li>
            }
        </ul>
    </div>
    </div>
</div>



<script>
    function filterFeedbacks() {
        var branchFilter = document.getElementById("branchFilter");
        var selectedBranchName = branchFilter.options[branchFilter.selectedIndex].text; // Lấy giá trị tên chi nhánh đã chọn

        var feedbackItems = document.querySelectorAll(".feedback-item"); // Lấy danh sách các phản hồi

        feedbackItems.forEach(function (item) {
            var branchName = item.querySelector(".branch-name").textContent.trim(); // Lấy tên chi nhánh của phản hồi
            if (selectedBranchName === "Tất cả" || branchName === selectedBranchName) {
                // Hiển thị phản hồi nếu nó thuộc chi nhánh đã chọn hoặc chọn "Tất cả"
                item.style.display = "block";
            } else {
                // Ẩn phản hồi nếu không thuộc chi nhánh đã chọn
                item.style.display = "none";
            }
        });
    }

    document.getElementById("searchButton").addEventListener("click", function () {
        searchFeedback();
    });

    document.getElementById("searchKeyword").addEventListener("input", function () {
        searchFeedback();
    });

    function searchFeedback() {
        var searchKeyword = document.getElementById("searchKeyword").value.toLowerCase();
        var feedbackList = document.querySelector(".feedback-list");
        var feedbackItems = Array.from(feedbackList.querySelectorAll(".feedback-item"));

        feedbackItems.forEach(function (item) {
            var content = item.querySelector(".feedback-content").textContent.toLowerCase();

            if (content.includes(searchKeyword)) {
                item.style.display = "block"; // Hiển thị phản hồi nếu nội dung chứa từ khóa
            } else {
                item.style.display = "none"; // Ẩn phản hồi nếu nội dung không chứa từ khóa
            }
        });
    }

    document.getElementById("sortOptions").addEventListener("change", function () {
        var selectedOption = this.value;
        var feedbackList = document.querySelector(".feedback-list");
        var feedbackItems = Array.from(feedbackList.querySelectorAll(".feedback-item"));

        feedbackItems.sort(function (a, b) {
            if (selectedOption === "dateAsc") {
                var dateA = new Date(a.querySelector(".feedback-date").textContent);
                var dateB = new Date(b.querySelector(".feedback-date").textContent);
                return dateA - dateB;
            } else if (selectedOption === "dateDesc") {
                var dateA = new Date(a.querySelector(".feedback-date").textContent);
                var dateB = new Date(b.querySelector(".feedback-date").textContent);
                return dateB - dateA;
            } else if (selectedOption === "ratingAsc") {
                var ratingA = a.querySelector(".star-rating").querySelectorAll(".fas.fa-star").length +
                    0.5 * a.querySelector(".star-rating").querySelectorAll(".fas.fa-star-half-alt").length;
                var ratingB = b.querySelector(".star-rating").querySelectorAll(".fas.fa-star").length +
                    0.5 * b.querySelector(".star-rating").querySelectorAll(".fas.fa-star-half-alt").length;
                return ratingA - ratingB;
            } else if (selectedOption === "ratingDesc") {
                var ratingA = a.querySelector(".star-rating").querySelectorAll(".fas.fa-star").length +
                    0.5 * a.querySelector(".star-rating").querySelectorAll(".fas.fa-star-half-alt").length;
                var ratingB = b.querySelector(".star-rating").querySelectorAll(".fas.fa-star").length +
                    0.5 * b.querySelector(".star-rating").querySelectorAll(".fas.fa-star-half-alt").length;
                return ratingB - ratingA;
            }
        });

        feedbackItems.forEach(function (item) {
            feedbackList.appendChild(item);
        });
    });
</script>