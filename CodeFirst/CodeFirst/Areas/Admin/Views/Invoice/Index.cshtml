@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@model IEnumerable<CodeFirst.Models.Entities.Invoice>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-area="Identity" asp-page="/Account/Manage/Index">Trang chủ</a></li>
        <li class="breadcrumb-item"><a class="my-active-link" asp-area="Admin" asp-action="Index" asp-controller="Invoice">Danh sách hóa đơn</a></li>
    </ol>
</nav>
<h1>Quản lý hóa đơn</h1>
<a class="btn btn-outline-info" id="openModalButton">
    Tính tiền thừa
</a>
<hr />
<table class="table" id="invoiceTable">
    <thead>
        <tr>
            <th>
                <a href="#" >Id hóa đơn</a>
            </th>
            <th>
                <a href="#"  >Email người đặt</a>
            </th>
            <th>
                <a href="#"  >Chi nhánh</a>
            </th>
            <th>
                <a href="#"  >Sảnh</a>
            </th>
            <th>
                <a href="#"  >Thời gian đặt</a>
            </th>
            <th>
                <a href="#"  >Thời gian tham dự</a>
            </th>
            <th>
                <a href="#"  >Thanh toán</a>
            </th>
            <th>
                <a href="#">Trạng thái</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.InvoiceID">@Html.DisplayFor(modelItem => item.InvoiceID)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Branch.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Hall.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InvoiceDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AttendanceDate)
                </td>
                <td>
                    @{
                        var paymentStatus = item.PaymentStatus == true ? "Đã thanh toán" : "Chưa thanh toán";
                    }
                    @Html.DisplayFor(modelItem => @paymentStatus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderStatus)
                </td>
                <td>
               
                    <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.InvoiceID">Xóa</a> |
                    <a class="btn btn-outline-info" asp-action="GenerateInvoicePDF" asp-route-invoiceId="@item.InvoiceID">
                        <i class="icofont-printer"></i> In hóa đơn
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="calculateChangeModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Tính Tiền Thừa</h5>
                <button type="button" class="close" aria-label="Close" id="closeModalButtonDetail" style="border-color:transparent;background-color:transparent;outline:none">
                    <span aria-hidden="true"><i class="fa-solid fa-circle-xmark fa-2xl" style="color: #e62719;"></i></span>
                </button>
            </div>
            <div class="modal-body">
                <form id="changeForm">
                    <div class="form-group">
                        <label for="total">Giá Tổng:</label>
                        <input type="text" class="form-control" id="total" name="total">
                    </div>
                    <div class="form-group">
                        <label for="amountPaid">Số Tiền Khách Đưa:</label>
                        <input type="text" class="form-control" id="amountPaid" name="amountPaid">
                    </div>
                    <div>
                        <label for="changeResult">Tiền thừa:</label>
                        <div id="changeResult"></div> <!-- Đây là phần tử để hiển thị kết quả -->
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="cancelButton" data-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="calculateChangeButton">Tính Tiền Thừa</button>
            </div>
        </div>
    </div>
</div>



@section Scripts{
    <script>
        $(document).ready(function () {

            // Lấy tham chiếu đến nút "Hủy"
            var cancelButton = document.getElementById('cancelButton');

            // Lắng nghe sự kiện click trên nút "Hủy" và đóng modal
            cancelButton.addEventListener('click', function () {
                var modal = document.getElementById('calculateChangeModal');
                if (modal) {
                    $(modal).modal('hide');
                }
            });

            // Lấy tham chiếu đến nút close
            var closeModalButton = document.getElementById('closeModalButtonDetail');

            // Lắng nghe sự kiện click trên nút close và đóng modal
            closeModalButton.addEventListener('click', function () {
                var modal = document.getElementById('calculateChangeModal');
                if (modal) {
                    $(modal).modal('hide'); // Sử dụng Bootstrap JavaScript để đóng modal
                }
            });

            // Xử lý khi nút "Tính Tiền Thừa" trên modal được nhấn
            $("#calculateChangeButton").click(function () {
                var total = $("#total").val();
                var amountPaid = $("#amountPaid").val();

                $.ajax({
                    url: "/Admin/Invoice/CalculateChange",
                    type: "POST",
                    data: { total: total, amountPaid: amountPaid },
                    success: function (data) {
                        if (data.error) {
                            alert(data.error);
                        } else {
                            $("#changeResult").text("Tiền thừa: " + data.change.toFixed(2));
                        }
                    }
                });
            });

            // Mở modal khi cần
            $("#openModalButton").click(function () {
                $("#calculateChangeModal").modal("show");
            });


            $(".sortable").click(function () {
                var column = $(this).data("column");
                var direction = "asc"; // Mặc định là sắp xếp tăng dần

                if ($(this).hasClass("sorted")) {
                    direction = $(this).hasClass("asc") ? "desc" : "asc";
                }

                $(".sortable").removeClass("sorted asc desc");
                $(this).addClass("sorted " + direction);

                sortTable(column, direction);
            });

            function sortTable(column, direction) {
                var table = $("#invoiceTable");
                var rows = table.find('tbody > tr').get();

                rows.sort(function (a, b) {
                    var keyA, keyB;

                    if (column === "InvoiceID") {
                        keyA = $(a).find("td:eq(0)").text();
                        keyB = $(b).find("td:eq(0)").text();
                    } else if (column === "Id") {
                        keyA = $(a).find("td:eq(1)").text();
                        keyB = $(b).find("td:eq(1)").text();
                    } else if (column === "Branch") {
                        keyA = $(a).find("td:eq(2)").text();
                        keyB = $(b).find("td:eq(2)").text();
                    } else if (column === "Hall") {
                        keyA = $(a).find("td:eq(3)").text();
                        keyB = $(b).find("td:eq(3)").text();
                    } else if (column === "InvoiceDate") {
                        // Lấy thời gian đặt từ data-attribute
                        keyA = $(a).find("td:eq(4)").data("invoice-date");
                        keyB = $(b).find("td:eq(4)").data("invoice-date");
                    }

                    if (column === "InvoiceID") {
                        return (parseInt(keyA, 10) > parseInt(keyB, 10)) ? (direction === "asc" ? 1 : -1) : (direction === "asc" ? -1 : 1);
                    } else {
                        return (direction === "asc" ? keyA.localeCompare(keyB) : keyB.localeCompare(keyA));
                    }
                });

                $.each(rows, function (index, row) {
                    table.children('tbody').append(row);
                });
            }

        });
    </script>
}
