name: dockercompose14856339162826337356
services:
  codefirst:
    build:
      context: T:\Test\Computer-Science\CodeFirst
      dockerfile: CodeFirst/Dockerfile
    container_name: code-first
    depends_on:
      codefirstdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      DB_HOST: codefirstdb
      DB_NAME: codefirst
      DB_SA_PASSWORD: password@12345#
    image: codefirst
    networks:
      democodefirstapp: null
    ports:
      - mode: ingress
        target: 80
        published: "8001"
        protocol: tcp
      - mode: ingress
        target: 80
        protocol: tcp
      - mode: ingress
        target: 443
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\PC\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\PC\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  codefirstdb:
    container_name: app-db
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
      MSSQL_SA_PASSWORD: password@12345#
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      democodefirstapp: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: mysqldata
        target: /var/opt/mssql
        volume: {}
networks:
  democodefirstapp:
    name: dockercompose14856339162826337356_democodefirstapp
volumes:
  mysqldata:
    name: dockercompose14856339162826337356_mysqldata